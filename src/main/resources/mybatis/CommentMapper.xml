<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkrepo.blog.repository.CommentMapper">
  <resultMap id="BaseResultMap" type="com.kkrepo.blog.domain.Comment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="p_id" jdbcType="BIGINT" property="pId" />
    <result column="c_id" jdbcType="BIGINT" property="cId" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="c_name" jdbcType="VARCHAR" property="cName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="sort" jdbcType="BIGINT" property="sort" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="device" jdbcType="VARCHAR" property="device" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kkrepo.blog.domain.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
    ip, device, address, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.kkrepo.blog.domain.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.kkrepo.blog.domain.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
          ip, device, address, create_time, update_time, content
      </otherwise>
    </choose>
    from tb_comment
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
          ip, device, address, create_time, update_time, content
      </otherwise>
    </choose>
    from tb_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kkrepo.blog.domain.CommentExample">
    delete from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kkrepo.blog.domain.Comment">
    insert into tb_comment (id, p_id, c_id, article_title, 
      article_id, name, c_name, 
      email, url, state, 
      sort, ip, device, address, 
      create_time, update_time, content
      )
    values (#{id,jdbcType=BIGINT}, #{pId,jdbcType=BIGINT}, #{cId,jdbcType=BIGINT}, #{articleTitle,jdbcType=VARCHAR}, 
      #{articleId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{cName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{sort,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{device,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.pId != null">
            p_id,
          </if>
          <if test="record.cId != null">
            c_id,
          </if>
          <if test="record.articleTitle != null">
            article_title,
          </if>
          <if test="record.articleId != null">
            article_id,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.cName != null">
            c_name,
          </if>
          <if test="record.email != null">
            email,
          </if>
          <if test="record.url != null">
            url,
          </if>
          <if test="record.state != null">
            state,
          </if>
          <if test="record.sort != null">
            sort,
          </if>
          <if test="record.ip != null">
            ip,
          </if>
          <if test="record.device != null">
            device,
          </if>
          <if test="record.address != null">
            address,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.content != null">
            content,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.pId != null">
            #{record.pId,jdbcType=BIGINT},
          </if>
          <if test="record.cId != null">
            #{record.cId,jdbcType=BIGINT},
          </if>
          <if test="record.articleTitle != null">
            #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            #{record.articleId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.cName != null">
            #{record.cName,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.state != null">
            #{record.state,jdbcType=VARCHAR},
          </if>
          <if test="record.sort != null">
            #{record.sort,jdbcType=BIGINT},
          </if>
          <if test="record.ip != null">
            #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.content != null">
            #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.kkrepo.blog.domain.CommentExample" resultType="java.lang.Long">
    select count(*) from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update tb_comment
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.pId != null">
            p_id = #{record.pId,jdbcType=BIGINT},
          </if>
          <if test="record.cId != null">
            c_id = #{record.cId,jdbcType=BIGINT},
          </if>
          <if test="record.articleTitle != null">
            article_title = #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            article_id = #{record.articleId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.cName != null">
            c_name = #{record.cName,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            url = #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.state != null">
            state = #{record.state,jdbcType=VARCHAR},
          </if>
          <if test="record.sort != null">
            sort = #{record.sort,jdbcType=BIGINT},
          </if>
          <if test="record.ip != null">
            ip = #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            device = #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            address = #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.content != null">
            content = #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_comment
    set id = #{record.id,jdbcType=BIGINT},
      p_id = #{record.pId,jdbcType=BIGINT},
      c_id = #{record.cId,jdbcType=BIGINT},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      article_id = #{record.articleId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      c_name = #{record.cName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      device = #{record.device,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_comment
    set id = #{record.id,jdbcType=BIGINT},
      p_id = #{record.pId,jdbcType=BIGINT},
      c_id = #{record.cId,jdbcType=BIGINT},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      article_id = #{record.articleId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      c_name = #{record.cName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      device = #{record.device,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update tb_comment
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.pId != null">
            p_id = #{record.pId,jdbcType=BIGINT},
          </if>
          <if test="record.cId != null">
            c_id = #{record.cId,jdbcType=BIGINT},
          </if>
          <if test="record.articleTitle != null">
            article_title = #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            article_id = #{record.articleId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.cName != null">
            c_name = #{record.cName,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            url = #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.state != null">
            state = #{record.state,jdbcType=VARCHAR},
          </if>
          <if test="record.sort != null">
            sort = #{record.sort,jdbcType=BIGINT},
          </if>
          <if test="record.ip != null">
            ip = #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            device = #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            address = #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.content != null">
            content = #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kkrepo.blog.domain.Comment">
    update tb_comment
    set p_id = #{pId,jdbcType=BIGINT},
      c_id = #{cId,jdbcType=BIGINT},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      c_name = #{cName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      device = #{device,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kkrepo.blog.domain.Comment">
    update tb_comment
    set p_id = #{pId,jdbcType=BIGINT},
      c_id = #{cId,jdbcType=BIGINT},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      c_name = #{cName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      device = #{device,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.kkrepo.blog.domain.CommentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.kkrepo.blog.domain.CommentExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
          ip, device, address, create_time, update_time, content
      </otherwise>
    </choose>
    from tb_comment
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment
    (id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
      ip, device, address, create_time, update_time, content)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.pId,jdbcType=BIGINT}, #{item.cId,jdbcType=BIGINT}, 
        #{item.articleTitle,jdbcType=VARCHAR}, #{item.articleId,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, 
        #{item.cName,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR}, 
        #{item.state,jdbcType=VARCHAR}, #{item.sort,jdbcType=BIGINT}, #{item.ip,jdbcType=VARCHAR}, 
        #{item.device,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.content,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'p_id'.toString() == column.value">
          #{item.pId,jdbcType=BIGINT}
        </if>
        <if test="'c_id'.toString() == column.value">
          #{item.cId,jdbcType=BIGINT}
        </if>
        <if test="'article_title'.toString() == column.value">
          #{item.articleTitle,jdbcType=VARCHAR}
        </if>
        <if test="'article_id'.toString() == column.value">
          #{item.articleId,jdbcType=BIGINT}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'c_name'.toString() == column.value">
          #{item.cName,jdbcType=VARCHAR}
        </if>
        <if test="'email'.toString() == column.value">
          #{item.email,jdbcType=VARCHAR}
        </if>
        <if test="'url'.toString() == column.value">
          #{item.url,jdbcType=VARCHAR}
        </if>
        <if test="'state'.toString() == column.value">
          #{item.state,jdbcType=VARCHAR}
        </if>
        <if test="'sort'.toString() == column.value">
          #{item.sort,jdbcType=BIGINT}
        </if>
        <if test="'ip'.toString() == column.value">
          #{item.ip,jdbcType=VARCHAR}
        </if>
        <if test="'device'.toString() == column.value">
          #{item.device,jdbcType=VARCHAR}
        </if>
        <if test="'address'.toString() == column.value">
          #{item.address,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'content'.toString() == column.value">
          #{item.content,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.pId != null">
            p_id,
          </if>
          <if test="record.cId != null">
            c_id,
          </if>
          <if test="record.articleTitle != null">
            article_title,
          </if>
          <if test="record.articleId != null">
            article_id,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.cName != null">
            c_name,
          </if>
          <if test="record.email != null">
            email,
          </if>
          <if test="record.url != null">
            url,
          </if>
          <if test="record.state != null">
            state,
          </if>
          <if test="record.sort != null">
            sort,
          </if>
          <if test="record.ip != null">
            ip,
          </if>
          <if test="record.device != null">
            device,
          </if>
          <if test="record.address != null">
            address,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.content != null">
            content,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.pId != null">
            #{record.pId,jdbcType=BIGINT},
          </if>
          <if test="record.cId != null">
            #{record.cId,jdbcType=BIGINT},
          </if>
          <if test="record.articleTitle != null">
            #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            #{record.articleId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.cName != null">
            #{record.cName,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.state != null">
            #{record.state,jdbcType=VARCHAR},
          </if>
          <if test="record.sort != null">
            #{record.sort,jdbcType=BIGINT},
          </if>
          <if test="record.ip != null">
            #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.content != null">
            #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.pId != null">
            p_id = #{record.pId,jdbcType=BIGINT},
          </if>
          <if test="record.cId != null">
            c_id = #{record.cId,jdbcType=BIGINT},
          </if>
          <if test="record.articleTitle != null">
            article_title = #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            article_id = #{record.articleId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.cName != null">
            c_name = #{record.cName,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            url = #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.state != null">
            state = #{record.state,jdbcType=VARCHAR},
          </if>
          <if test="record.sort != null">
            sort = #{record.sort,jdbcType=BIGINT},
          </if>
          <if test="record.ip != null">
            ip = #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            device = #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            address = #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.content != null">
            content = #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <update id="upsertByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update tb_comment
    set
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.pId != null">
            p_id = #{record.pId,jdbcType=BIGINT},
          </if>
          <if test="record.cId != null">
            c_id = #{record.cId,jdbcType=BIGINT},
          </if>
          <if test="record.articleTitle != null">
            article_title = #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            article_id = #{record.articleId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.cName != null">
            c_name = #{record.cName,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            url = #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.state != null">
            state = #{record.state,jdbcType=VARCHAR},
          </if>
          <if test="record.sort != null">
            sort = #{record.sort,jdbcType=BIGINT},
          </if>
          <if test="record.ip != null">
            ip = #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            device = #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            address = #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.content != null">
            content = #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into tb_comment
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.pId != null">
            p_id,
          </if>
          <if test="record.cId != null">
            c_id,
          </if>
          <if test="record.articleTitle != null">
            article_title,
          </if>
          <if test="record.articleId != null">
            article_id,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.cName != null">
            c_name,
          </if>
          <if test="record.email != null">
            email,
          </if>
          <if test="record.url != null">
            url,
          </if>
          <if test="record.state != null">
            state,
          </if>
          <if test="record.sort != null">
            sort,
          </if>
          <if test="record.ip != null">
            ip,
          </if>
          <if test="record.device != null">
            device,
          </if>
          <if test="record.address != null">
            address,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.content != null">
            content,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.pId != null">
            #{record.pId,jdbcType=BIGINT},
          </if>
          <if test="record.cId != null">
            #{record.cId,jdbcType=BIGINT},
          </if>
          <if test="record.articleTitle != null">
            #{record.articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="record.articleId != null">
            #{record.articleId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.cName != null">
            #{record.cName,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.url != null">
            #{record.url,jdbcType=VARCHAR},
          </if>
          <if test="record.state != null">
            #{record.state,jdbcType=VARCHAR},
          </if>
          <if test="record.sort != null">
            #{record.sort,jdbcType=BIGINT},
          </if>
          <if test="record.ip != null">
            #{record.ip,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.content != null">
            #{record.content,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    from dual where not exists
    (
    select 1 from tb_comment
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="upsert" parameterType="com.kkrepo.blog.domain.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment
    (id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
      ip, device, address, create_time, update_time)
    values
    (#{id,jdbcType=BIGINT}, #{pId,jdbcType=BIGINT}, #{cId,jdbcType=BIGINT}, #{articleTitle,jdbcType=VARCHAR}, 
      #{articleId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{cName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{sort,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{device,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    p_id = #{pId,jdbcType=BIGINT}, 
    c_id = #{cId,jdbcType=BIGINT}, 
    article_title = #{articleTitle,jdbcType=VARCHAR}, 
    article_id = #{articleId,jdbcType=BIGINT}, 
    name = #{name,jdbcType=VARCHAR}, 
    c_name = #{cName,jdbcType=VARCHAR}, 
    email = #{email,jdbcType=VARCHAR}, 
    url = #{url,jdbcType=VARCHAR}, 
    state = #{state,jdbcType=VARCHAR}, 
    sort = #{sort,jdbcType=BIGINT}, 
    ip = #{ip,jdbcType=VARCHAR}, 
    device = #{device,jdbcType=VARCHAR}, 
    address = #{address,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}
  </insert>
  <update id="upsertByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update tb_comment
    set
    id = #{record.id,jdbcType=BIGINT}, 
    p_id = #{record.pId,jdbcType=BIGINT}, 
    c_id = #{record.cId,jdbcType=BIGINT}, 
    article_title = #{record.articleTitle,jdbcType=VARCHAR}, 
    article_id = #{record.articleId,jdbcType=BIGINT}, 
    name = #{record.name,jdbcType=VARCHAR}, 
    c_name = #{record.cName,jdbcType=VARCHAR}, 
    email = #{record.email,jdbcType=VARCHAR}, 
    url = #{record.url,jdbcType=VARCHAR}, 
    state = #{record.state,jdbcType=VARCHAR}, 
    sort = #{record.sort,jdbcType=BIGINT}, 
    ip = #{record.ip,jdbcType=VARCHAR}, 
    device = #{record.device,jdbcType=VARCHAR}, 
    address = #{record.address,jdbcType=VARCHAR}, 
    create_time = #{record.createTime,jdbcType=TIMESTAMP}, 
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into tb_comment
    (id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
      ip, device, address, create_time, update_time)
    select
    #{record.id,jdbcType=BIGINT}, #{record.pId,jdbcType=BIGINT}, #{record.cId,jdbcType=BIGINT}, 
      #{record.articleTitle,jdbcType=VARCHAR}, #{record.articleId,jdbcType=BIGINT}, #{record.name,jdbcType=VARCHAR}, 
      #{record.cName,jdbcType=VARCHAR}, #{record.email,jdbcType=VARCHAR}, #{record.url,jdbcType=VARCHAR}, 
      #{record.state,jdbcType=VARCHAR}, #{record.sort,jdbcType=BIGINT}, #{record.ip,jdbcType=VARCHAR}, 
      #{record.device,jdbcType=VARCHAR}, #{record.address,jdbcType=VARCHAR}, #{record.createTime,jdbcType=TIMESTAMP}, 
      #{record.updateTime,jdbcType=TIMESTAMP}
    from dual where not exists
    (
    select 1 from tb_comment
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="upsertWithBLOBs" parameterType="com.kkrepo.blog.domain.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment
    (id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
      ip, device, address, create_time, update_time, content)
    values
    (#{id,jdbcType=BIGINT}, #{pId,jdbcType=BIGINT}, #{cId,jdbcType=BIGINT}, #{articleTitle,jdbcType=VARCHAR}, 
      #{articleId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{cName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{sort,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{device,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    p_id = #{pId,jdbcType=BIGINT}, 
    c_id = #{cId,jdbcType=BIGINT}, 
    article_title = #{articleTitle,jdbcType=VARCHAR}, 
    article_id = #{articleId,jdbcType=BIGINT}, 
    name = #{name,jdbcType=VARCHAR}, 
    c_name = #{cName,jdbcType=VARCHAR}, 
    email = #{email,jdbcType=VARCHAR}, 
    url = #{url,jdbcType=VARCHAR}, 
    state = #{state,jdbcType=VARCHAR}, 
    sort = #{sort,jdbcType=BIGINT}, 
    ip = #{ip,jdbcType=VARCHAR}, 
    device = #{device,jdbcType=VARCHAR}, 
    address = #{address,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}, 
    content = #{content,jdbcType=LONGVARCHAR}
  </insert>
  <update id="upsertByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update tb_comment
    set
    id = #{record.id,jdbcType=BIGINT}, 
    p_id = #{record.pId,jdbcType=BIGINT}, 
    c_id = #{record.cId,jdbcType=BIGINT}, 
    article_title = #{record.articleTitle,jdbcType=VARCHAR}, 
    article_id = #{record.articleId,jdbcType=BIGINT}, 
    name = #{record.name,jdbcType=VARCHAR}, 
    c_name = #{record.cName,jdbcType=VARCHAR}, 
    email = #{record.email,jdbcType=VARCHAR}, 
    url = #{record.url,jdbcType=VARCHAR}, 
    state = #{record.state,jdbcType=VARCHAR}, 
    sort = #{record.sort,jdbcType=BIGINT}, 
    ip = #{record.ip,jdbcType=VARCHAR}, 
    device = #{record.device,jdbcType=VARCHAR}, 
    address = #{record.address,jdbcType=VARCHAR}, 
    create_time = #{record.createTime,jdbcType=TIMESTAMP}, 
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}, 
    content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into tb_comment
    (id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
      ip, device, address, create_time, update_time, content)
    select
    #{record.id,jdbcType=BIGINT}, #{record.pId,jdbcType=BIGINT}, #{record.cId,jdbcType=BIGINT}, 
      #{record.articleTitle,jdbcType=VARCHAR}, #{record.articleId,jdbcType=BIGINT}, #{record.name,jdbcType=VARCHAR}, 
      #{record.cName,jdbcType=VARCHAR}, #{record.email,jdbcType=VARCHAR}, #{record.url,jdbcType=VARCHAR}, 
      #{record.state,jdbcType=VARCHAR}, #{record.sort,jdbcType=BIGINT}, #{record.ip,jdbcType=VARCHAR}, 
      #{record.device,jdbcType=VARCHAR}, #{record.address,jdbcType=VARCHAR}, #{record.createTime,jdbcType=TIMESTAMP}, 
      #{record.updateTime,jdbcType=TIMESTAMP}, #{record.content,jdbcType=LONGVARCHAR}
      
    from dual where not exists
    (
    select 1 from tb_comment
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="batchUpsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'p_id'.toString() == column.value">
          #{item.pId,jdbcType=BIGINT}
        </if>
        <if test="'c_id'.toString() == column.value">
          #{item.cId,jdbcType=BIGINT}
        </if>
        <if test="'article_title'.toString() == column.value">
          #{item.articleTitle,jdbcType=VARCHAR}
        </if>
        <if test="'article_id'.toString() == column.value">
          #{item.articleId,jdbcType=BIGINT}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'c_name'.toString() == column.value">
          #{item.cName,jdbcType=VARCHAR}
        </if>
        <if test="'email'.toString() == column.value">
          #{item.email,jdbcType=VARCHAR}
        </if>
        <if test="'url'.toString() == column.value">
          #{item.url,jdbcType=VARCHAR}
        </if>
        <if test="'state'.toString() == column.value">
          #{item.state,jdbcType=VARCHAR}
        </if>
        <if test="'sort'.toString() == column.value">
          #{item.sort,jdbcType=BIGINT}
        </if>
        <if test="'ip'.toString() == column.value">
          #{item.ip,jdbcType=VARCHAR}
        </if>
        <if test="'device'.toString() == column.value">
          #{item.device,jdbcType=VARCHAR}
        </if>
        <if test="'address'.toString() == column.value">
          #{item.address,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'content'.toString() == column.value">
          #{item.content,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
    on duplicate key update 
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName} = values(${column.escapedColumnName})
    </foreach>
  </insert>
  <insert id="batchUpsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment
    (id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
      ip, device, address, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.pId,jdbcType=BIGINT}, #{item.cId,jdbcType=BIGINT}, 
        #{item.articleTitle,jdbcType=VARCHAR}, #{item.articleId,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, 
        #{item.cName,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR}, 
        #{item.state,jdbcType=VARCHAR}, #{item.sort,jdbcType=BIGINT}, #{item.ip,jdbcType=VARCHAR}, 
        #{item.device,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
    on duplicate key update 
    id = values(id),
    p_id = values(p_id),
    c_id = values(c_id),
    article_title = values(article_title),
    article_id = values(article_id),
    name = values(name),
    c_name = values(c_name),
    email = values(email),
    url = values(url),
    state = values(state),
    sort = values(sort),
    ip = values(ip),
    device = values(device),
    address = values(address),
    create_time = values(create_time),
    update_time = values(update_time)
  </insert>
  <insert id="batchUpsertWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into tb_comment
    (id, p_id, c_id, article_title, article_id, name, c_name, email, url, state, sort, 
      ip, device, address, create_time, update_time, content)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.pId,jdbcType=BIGINT}, #{item.cId,jdbcType=BIGINT}, 
        #{item.articleTitle,jdbcType=VARCHAR}, #{item.articleId,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, 
        #{item.cName,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR}, 
        #{item.state,jdbcType=VARCHAR}, #{item.sort,jdbcType=BIGINT}, #{item.ip,jdbcType=VARCHAR}, 
        #{item.device,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.content,jdbcType=LONGVARCHAR})
    </foreach>
    on duplicate key update 
    id = values(id),
    p_id = values(p_id),
    c_id = values(c_id),
    article_title = values(article_title),
    article_id = values(article_id),
    name = values(name),
    c_name = values(c_name),
    email = values(email),
    url = values(url),
    state = values(state),
    sort = values(sort),
    ip = values(ip),
    device = values(device),
    address = values(address),
    create_time = values(create_time),
    update_time = values(update_time),
    content = values(content)
  </insert>
</mapper>